<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>git常用指令总结</title>
    <url>/2020/08/23/git%E6%8C%87%E4%BB%A4/</url>
    <content><![CDATA[<p><img src="/images/git.png" alt="git"></p>
<p>在这里记录一些常用的<code>git</code>指令，以及使用时碰到的一些问题及相应的解决办法。</p>
<a id="more"></a>

<h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git init [local repository]</span><br></pre></td></tr></table></figure>

<h2 id="克隆到本地"><a href="#克隆到本地" class="headerlink" title="克隆到本地"></a>克隆到本地</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone &lt;url&gt;</span><br></pre></td></tr></table></figure>

<h2 id="添加变化至暂存区-index"><a href="#添加变化至暂存区-index" class="headerlink" title="添加变化至暂存区(index)"></a>添加变化至暂存区(index)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git add &lt;filename&gt;</span><br><span class="line">git add *</span><br><span class="line">git commit -m &quot;&lt;commit message&gt;&quot;</span><br></pre></td></tr></table></figure>

<h2 id="推送"><a href="#推送" class="headerlink" title="推送"></a>推送</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 推送到指定的远程分支</span></span><br><span class="line">git push oringin &lt;master&gt;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 绑定远程分支并推送</span></span><br><span class="line">git romete add origin &lt;master&gt;</span><br><span class="line">git push</span><br></pre></td></tr></table></figure>

<h2 id="分支-branch-相关"><a href="#分支-branch-相关" class="headerlink" title="分支(branch)相关"></a>分支(branch)相关</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git branch # 查看本地分支</span><br><span class="line">git branch -r # 查看远程分支</span><br><span class="line">git branch -a # 查看所有分支</span><br><span class="line"></span><br><span class="line">git checkout -b &lt;dev&gt; # 创建本地分支</span><br><span class="line">git checkout &lt;dev&gt; # 切换到本地分支（没有会根据远程分支创建本地分支）</span><br><span class="line"></span><br><span class="line">git branch -d &lt;dev&gt; # 删除本地分支</span><br><span class="line">git push origin -d &lt;remote_dev&gt; # 删除远程分支</span><br><span class="line"></span><br><span class="line">git push origin &lt;dev&gt; # 推送到远程分支，没有会自动创建</span><br><span class="line"></span><br><span class="line">git checkout [branch name] # 切换分支</span><br></pre></td></tr></table></figure>

<h2 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line">git fetch [origin]</span><br></pre></td></tr></table></figure>

<h2 id="缓存-stash-相关"><a href="#缓存-stash-相关" class="headerlink" title="缓存(stash)相关"></a>缓存(stash)相关</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git stash list</span><br><span class="line">git stash save &#x27;&lt;stash name&gt;&#x27;</span><br><span class="line">git stash show</span><br><span class="line">git stash show -p</span><br><span class="line">git stash apply [@&#123;num&#125;]</span><br><span class="line">git stash pop [@&#123;num&#125;]</span><br><span class="line">git stash drop</span><br><span class="line">git stash clear</span><br></pre></td></tr></table></figure>

<h2 id="状态-status"><a href="#状态-status" class="headerlink" title="状态(status)"></a>状态(status)</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>guide</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>LeetCode算法题之日期间隔天数</title>
    <url>/2020/08/24/LeetCode%E7%AE%97%E6%B3%95%E9%A2%98%E4%B9%8B%E6%97%A5%E6%9C%9F%E9%97%B4%E9%9A%94%E5%A4%A9%E6%95%B0/</url>
    <content><![CDATA[<p>一道来自<a href="https://leetcode-cn.com/">LeetCode</a>的算法题。</p>
<blockquote>
<p><strong>难度</strong>：简单</p>
<p><strong>来源</strong>：<a href="https://leetcode-cn.com/problems/number-of-days-between-two-dates/">https://leetcode-cn.com/problems/number-of-days-between-two-dates/</a></p>
<p><strong>题目</strong>：请你编写一个程序来计算两个日期之间隔了多少天。日期以字符串形式给出，格式为 <code>YYYY-MM-DD</code>。（注：给定的日期是 <code>1971</code> 年到 <code>2100</code> 年之间的有效日期）</p>
</blockquote>
<a id="more"></a>

<h2 id="待实现模板"><a href="#待实现模板" class="headerlink" title="待实现模板"></a>待实现模板</h2><p><strong>typescript</strong>：</p>
<figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">daysBetweenDates</span>(<span class="params">date1: <span class="built_in">string</span>, date2: <span class="built_in">string</span></span>): <span class="title">number</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p><strong>python</strong>：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">daysBetweenDates</span>(<span class="params">self, date1, date2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type date1: str</span></span><br><span class="line"><span class="string">        :type date2: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="分析-amp-示例"><a href="#分析-amp-示例" class="headerlink" title="分析&amp;示例"></a>分析&amp;示例</h2><p><strong>示例1：</strong></p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">输入：date1 = &quot;2019-06-29&quot;, date2 = &quot;2019-06-30&quot;</span><br><span class="line">输出：1</span><br></pre></td></tr></table></figure>

<p><strong>示例2：</strong></p>
<figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">输入：date1 = &quot;2020-01-15&quot;, date2 = &quot;2019-12-31&quot;</span><br><span class="line">输出：15</span><br></pre></td></tr></table></figure>

<p><strong>分析：</strong></p>
<p>计算天数间隔，我们可以以给定的最小日期<code>1971.1.1</code>为基准，分别计算给定日期经过了多少天，这样两者相减的绝对值就是间隔天数了。</p>
<p>关键的部分在于如何计算出从<code>1971.1.1</code>到给定日期经过了多少天，一种方法是从给定日期，一天一天递减，直到<code>1971.1.1</code>，但这样比较<strong>简单粗暴</strong>，我们可以找到一些规律来节约我们的计算：每个月的天数是固定的，或者说每年的天数是固定的，除了闰年2月多一天，有了这个规律，我们就可以直接递减年份来计算，而不必一天一天递减。</p>
<p>注：闰年指能被<code>4</code>整除但又不能被<code>100</code>整除的年份，除了能被<code>400</code>整除的世纪闰年。</p>
<h2 id="实现-TypeScript"><a href="#实现-TypeScript" class="headerlink" title="实现(TypeScript)"></a>实现(TypeScript)</h2><figure class="highlight typescript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">daysBetweenDates</span>(<span class="params">date1: <span class="built_in">string</span>, date2: <span class="built_in">string</span></span>): <span class="title">number</span> </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> d1 = getDays(date1);</span><br><span class="line">    <span class="keyword">let</span> d2 = getDays(date2);</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Math</span>.abs(d1 - d2);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDays</span>(<span class="params">str: <span class="built_in">string</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> arr = str.split(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">    <span class="keyword">let</span> year = <span class="built_in">parseInt</span>(arr[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">let</span> month = <span class="built_in">parseInt</span>(arr[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">let</span> day = <span class="built_in">parseInt</span>(arr[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">let</span> months = [<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>]; <span class="comment">// 365</span></span><br><span class="line">    <span class="keyword">const</span> startY = <span class="number">1971</span>,</span><br><span class="line">        startM = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 日</span></span><br><span class="line">    <span class="keyword">let</span> allDays = day;</span><br><span class="line">    <span class="comment">// 月</span></span><br><span class="line">    <span class="keyword">if</span>(month &gt; <span class="number">2</span> &amp;&amp; isLeapYear(year))&#123;</span><br><span class="line">        allDays += <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">1</span>; i &lt; month; i++)&#123;</span><br><span class="line">        allDays += months[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 年</span></span><br><span class="line">    <span class="keyword">while</span>(year &gt; startY)&#123;</span><br><span class="line">        allDays += <span class="number">365</span>;</span><br><span class="line">        <span class="keyword">if</span>(isLeapYear(--year)) &#123;</span><br><span class="line">            allDays += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> allDays;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isLeapYear</span>(<span class="params">year: <span class="built_in">number</span></span>): <span class="title">boolean</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (year % <span class="number">4</span> === <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span>) || (year % <span class="number">400</span> === <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="实现（Python）"><a href="#实现（Python）" class="headerlink" title="实现（Python）"></a>实现（Python）</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>(<span class="params">object</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">daysBetweenDates</span>(<span class="params">self, date1, date2</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        :type date1: str</span></span><br><span class="line"><span class="string">        :type date2: str</span></span><br><span class="line"><span class="string">        :rtype: int</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> abs(self.getDays(date1) - self.getDays(date2));</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">isLeapYear</span>(<span class="params">self, year</span>):</span></span><br><span class="line">        <span class="keyword">return</span> (year % <span class="number">400</span> == <span class="number">0</span>) <span class="keyword">or</span> (year % <span class="number">100</span> != <span class="number">0</span> <span class="keyword">and</span> year % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getDays</span>(<span class="params">self, date</span>):</span></span><br><span class="line">        dataArr = date.split(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        year = int(dataArr[<span class="number">0</span>]);</span><br><span class="line">        month = int(dataArr[<span class="number">1</span>]);</span><br><span class="line">        allDays = int(dataArr[<span class="number">2</span>]); <span class="comment"># 日</span></span><br><span class="line">        months = [<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>];</span><br><span class="line">        <span class="keyword">if</span> month &gt; <span class="number">2</span> <span class="keyword">and</span> self.isLeapYear(year):</span><br><span class="line">            allDays += <span class="number">1</span>;</span><br><span class="line">        <span class="comment"># 月</span></span><br><span class="line">        i = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> month &gt; i:</span><br><span class="line">            allDays += months[i]</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        <span class="comment"># 年</span></span><br><span class="line">        <span class="keyword">while</span> year &gt; <span class="number">1971</span>:</span><br><span class="line">            year -= <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> self.isLeapYear(year):</span><br><span class="line">                allDays += <span class="number">1</span>;</span><br><span class="line">            allDays += <span class="number">365</span>;</span><br><span class="line">        <span class="keyword">return</span> allDays;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>编程题</category>
        <category>算法</category>
      </categories>
      <tags>
        <tag>算法题</tag>
        <tag>LeetCode</tag>
      </tags>
  </entry>
</search>
